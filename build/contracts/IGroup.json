{
  "contractName": "IGroup",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "secretary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "PolicyholderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "PolicyholderRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_oldSubgroup",
          "type": "uint8"
        }
      ],
      "name": "SubgroupChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "PremiumPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Locked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "ClaimOpened",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "ClaimRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "ClaimApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_defector",
          "type": "address"
        }
      ],
      "name": "Defected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_secretary",
          "type": "address"
        }
      ],
      "name": "Overthrown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_secretary",
          "type": "address"
        }
      ],
      "name": "Installed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_policyholder",
          "type": "address"
        }
      ],
      "name": "ToxicClaimStripped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimaryTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_subgroup",
          "type": "uint8"
        }
      ],
      "name": "addPolicyholder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "removePolicyholder",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_policyholder",
          "type": "address"
        },
        {
          "name": "_subgroup",
          "type": "uint8"
        }
      ],
      "name": "changeSubgroup",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "lock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payPremium",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimant",
          "type": "address"
        }
      ],
      "name": "rejectClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_claimant",
          "type": "address"
        }
      ],
      "name": "approveClaim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "defect",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "overthrow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_secretary",
          "type": "address"
        }
      ],
      "name": "install",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "remittable",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "remit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isLoaned",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_policyholder\",\"type\":\"address\"},{\"name\":\"_subgroup\",\"type\":\"uint8\"}],\"name\":\"changeSubgroup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_claimant\",\"type\":\"address\"}],\"name\":\"rejectClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferPrimary\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"openClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"payPremium\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_secretary\",\"type\":\"address\"}],\"name\":\"install\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"defect\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"secretary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"remit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"overthrow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"primary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isLoaned\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"remittable\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_claimant\",\"type\":\"address\"}],\"name\":\"approveClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_subgroup\",\"type\":\"uint8\"}],\"name\":\"addPolicyholder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"lock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"removePolicyholder\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"PolicyholderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"PolicyholderRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_oldSubgroup\",\"type\":\"uint8\"}],\"name\":\"SubgroupChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"PremiumPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Locked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"ClaimOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"ClaimRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"ClaimApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_defector\",\"type\":\"address\"}],\"name\":\"Defected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_secretary\",\"type\":\"address\"}],\"name\":\"Overthrown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_secretary\",\"type\":\"address\"}],\"name\":\"Installed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_policyholder\",\"type\":\"address\"}],\"name\":\"ToxicClaimStripped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimaryTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"blOX Consulting LLC. Date: 06.20.2019 Interface for TandaPay Groups User services: Policyholder and Secretary Groups are deployed for secretaries by TandaPayService*\",\"methods\":{\"addPolicyholder(address,uint8)\":{\"details\":\"modifier isSecretarymodifier correctPeriod(periodState.LOBBY) Add a Policyholder to the group\",\"params\":{\"_subgroup\":\"the subgroup they are to be added to*\",\"_to\":\"the address of the Policyholder being added\"}},\"approveClaim(address)\":{\"details\":\"modifier isSecretarymodifier correctPeriod(periodState.POST) Secretary approves a Policyholder's Claim\",\"params\":{\"_claimant\":\"the address of the Policyholder who opened the claim*\"}},\"changeSubgroup(address,uint8)\":{\"details\":\"modifier isSecretarymodifier correctPeriod(periodState.PRE) Change the subgroup of a given policyholder\",\"params\":{\"_policyholder\":\"the address of the policyholder switching groups\",\"_subgroup\":\"the subgroup being switched to*\"}},\"defect()\":{\"details\":\"modifier activePolicyholdermodifier correctPeriod(periodState.POST) Policyholder defects from the Tanda Group*\"},\"install(address)\":{\"details\":\"modifier onlyPrimarycan only be called if Secretary is TandaPayService Change the secretary of this group\",\"params\":{\"_secretary\":\"the address being authorized as Secretary in this Group contract*\"}},\"isLoaned()\":{\"details\":\"view only Determine whether or not a Group is currently paying back a Loan\"},\"lock()\":{\"details\":\"modifier isSecretaryensure groupSize >= 50, group is not in escrow Lock all funds in the Insurance smart contract\"},\"openClaim()\":{\"details\":\"modifier activePolicyholdermodifier correctPeriod(periodState.ACTIVE) Policyholder opens a new claim*\"},\"overthrow()\":{\"details\":\"modifier onlyPrimary Give secretary rights to the TandaPayService contract*\"},\"payPremium()\":{\"details\":\"modifier isPolicyholdermodifier correctPeriod(periodState.PRE) Policyholder pays their Dai Premium to the Group contract for escrow *\"},\"primary()\":{\"return\":\"the address of the primary.\"},\"rejectClaim(address)\":{\"details\":\"modifier isSecretary modifier correctPeriod(periodState.POST) Secretary rejects a claim\",\"params\":{\"_claimant\":\"the address of the Policyholder who opened the claim*\"}},\"remit()\":{\"details\":\"modifier onlyPrimarymodifier unlocked Remit this group's Insurance Escrow*\"},\"remittable()\":{\"details\":\"modifier onlyPrimary Determine whether a group is ready to be remitted from escrow\",\"return\":\"true if the group is ready to remit, and false otherwise*\"},\"removePolicyholder(address)\":{\"details\":\"modifier isSecretarymodifier correctPeriod(periodState.PRE) Remove a Policyholder from the group\",\"params\":{\"_from\":\"the address of the Policyholder being removed*\"}},\"transferPrimary(address)\":{\"details\":\"Transfers contract to a new primary.\",\"params\":{\"recipient\":\"The address of new primary.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jack/TandaPay-Contracts/contracts/IGroup.sol\":\"IGroup\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jack/TandaPay-Contracts/contracts/IGroup.sol\":{\"keccak256\":\"0x9df06be89b5b70b4104a47424796fcd6c22d67fc3f0528f7a5af9082b02070a2\",\"urls\":[\"bzzr://334947bc39d9a4ccb73a10e8a1b1b54ebb182bc1f9b7e1c3dab9b024c248285c\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5eb69360d3441ab2ee799bd7c007cccbffb0896f12b2dfe1456193e2aa180a11\",\"urls\":[\"bzzr://ecd0352164978c418c8f5b0080c972b65e4b07f6afc593fb7cdd856185a458ea\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0xa5f5ed53adb91ab6a16bee78b255b4b8ed59945bd5c9a7b360d8a62fc63b8da0\",\"urls\":[\"bzzr://2dd07a98e47fe608668d8d3a6591b27e5bd884cdf2f2e6dbd8e571f3a43ea8e3\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >= 0.4.0 < 0.7.0;\n\nimport 'openzeppelin-solidity/contracts/ownership/Secondary.sol';\nimport 'openzeppelin-solidity/contracts/token/ERC20/IERC20.sol';\nimport 'openzeppelin-solidity/contracts/drafts/Counters.sol';\n\n/**\n * @author blOX Consulting LLC.\n * Date: 06.20.2019\n * Interface for TandaPay Groups\n * User services: Policyholder and Secretary\n * Groups are deployed for secretaries by TandaPayService\n **/\ncontract IGroup is Secondary {\n    \n    using Counters for Counters.Counter;\n    \n    ///EVENTS///\n    event PolicyholderAdded(address _policyholder);\n    event PolicyholderRemoved(address _policyholder);\n    event SubgroupChange(address _policyholder, uint8 _oldSubgroup);\n    event PremiumPaid(address _policyholder);\n    event Locked();\n    event ClaimOpened(address _policyholder);\n    event ClaimRejected(address _policyholder);\n    event ClaimApproved(address _policyholder);\n    event Defected(address _defector);\n    event Overthrown(address _secretary);\n    event Installed(address _secretary);\n    event ToxicClaimStripped(address _policyholder);\n\n    ///MAPPINGS///\n    mapping(address => uint8) policyholders;\n    mapping(uint8 => Counters.Counter) subgroupCounts;\n    mapping(uint8 => Counters.Counter) defectionCount;\n    mapping(uint8 => bool) toxicSubgroup;\n    mapping(uint16 => Period) periods;\n    mapping(uint8 => address) activeParticipants;\n    mapping(address => uint8) participantToIndex;\n    mapping(uint => uint) locks;\n\n    ///CONTRACTS///\n    IERC20 Dai;\n    Counters.Counter groupSize;\n    Counters.Counter periodIndex;\n    Counters.Counter participantIndex;\n    \n    ///ADDRESSES///\n    address public secretary;\n\n    ///ENUMERATIONS///\n    enum periodState {LOBBY, PRE, ACTIVE, POST}\n    enum claimState {REJECTED, OPEN, ACCEPTED}\n\n    ///INTEGERS///\n    uint8 premium;\n    uint8 constant DEFECTION_THRESHOLD = 2;\n\n    ///STRUCTS///\n    struct Claim {\n        address policyholder;\n        claimState state;\n    }\n    \n    struct Period {\n        Counters.Counter claimIndex;\n        mapping(uint8 => Claim) claims;\n        mapping(address => uint8) openedClaim;\n    }\n\n    struct Loan {\n        uint months;\n        uint deficit;\n    }\n\n    ///MODIFIERS///\n    modifier isSecretary() {\n        require(secretary == msg.sender, \"Address is not this Group's Secretary!\");\n        _;\n    }\n    \n    modifier isPolicyholder() {\n        require(policyholders[msg.sender] != 0, \"Address is not a Policyholder in this Group!\");\n        _;\n    }\n    \n    modifier activePolicyholder() {\n        require(participantToIndex[msg.sender] != 0, \"Policyholder is not active in the current Period!\");\n        _;\n    }\n    \n    modifier correctPeriod(periodState _state) {\n        require(locks[uint(_state)] > now , \"Too late in period for this Action!\");\n        require(locks[uint(_state) - 1] <= now, \"Too early in period for this Action!\");\n        _;\n    }\n    \n    modifier unlocked() {\n        require(locks[uint8(periodState.POST)] <= now,\n            \"Cannot perform remittance while Insurance escrow is still timelocked!\");\n        _;\n    }\n\n    ///FUNCTIONS///\n    /**\n     * @dev modifier isSecretary\n     * @dev modifier correctPeriod(periodState.LOBBY)\n     * Add a Policyholder to the group\n     * @param _to the address of the Policyholder being added\n     * @param _subgroup the subgroup they are to be added to\n     **/\n    function addPolicyholder(address _to, uint8 _subgroup) public;\n    \n    /**\n     * @dev modifier isSecretary\n     * @dev modifier correctPeriod(periodState.PRE)\n     * Remove a Policyholder from the group\n     * @param _from the address of the Policyholder being removed\n     **/\n    function removePolicyholder(address _from) public;\n    \n    /**\n     * @dev modifier isSecretary\n     * @dev modifier correctPeriod(periodState.PRE)\n     * Change the subgroup of a given policyholder\n     * @param _policyholder the address of the policyholder switching groups\n     * @param _subgroup the subgroup being switched to\n     **/\n    function changeSubgroup(address _policyholder, uint8 _subgroup) public;\n\n    /**\n     * @dev modifier isSecretary\n     * @dev ensure groupSize >= 50, group is not in escrow\n     * Lock all funds in the Insurance smart contract\n     */\n    function lock() public;\n\n    /**\n     * @dev modifier isPolicyholder\n     * @dev modifier correctPeriod(periodState.PRE)\n     * Policyholder pays their Dai Premium to the Group contract for escrow \n     **/\n    function payPremium() public;\n    \n    /**\n     * @dev modifier activePolicyholder\n     * @dev modifier correctPeriod(periodState.ACTIVE)\n     * Policyholder opens a new claim\n     **/\n    function openClaim() public;\n    \n    /**\n     * @dev modifier isSecretary \n     * @dev modifier correctPeriod(periodState.POST)\n     * Secretary rejects a claim\n     * @param _claimant the address of the Policyholder who opened the claim\n     **/\n    function rejectClaim(address _claimant) public;\n    \n    /**\n     * @dev modifier isSecretary\n     * @dev modifier correctPeriod(periodState.POST)\n     * Secretary approves a Policyholder's Claim\n     * @param _claimant the address of the Policyholder who opened the claim\n     **/\n    function approveClaim(address _claimant) public;\n    \n    /**\n     * @dev modifier activePolicyholder\n     * @dev modifier correctPeriod(periodState.POST)\n     * Policyholder defects from the Tanda Group\n     **/\n    function defect() public;\n    \n    /**\n     * @dev modifier onlyPrimary\n     * Give secretary rights to the TandaPayService contract\n     **/\n    function overthrow() public;\n    \n    /**\n     * @dev modifier onlyPrimary\n     * @dev can only be called if Secretary is TandaPayService\n     * Change the secretary of this group\n     * @param _secretary the address being authorized as Secretary in this Group contract\n     **/\n    function install(address _secretary) public;\n    \n    /**\n     * @dev modifier onlyPrimary\n     * Determine whether a group is ready to be remitted from escrow\n     * @return true if the group is ready to remit, and false otherwise\n     **/\n    function remittable() public view returns (bool);\n    \n    /**\n     * @dev modifier onlyPrimary\n     * @dev modifier unlocked\n     * Remit this group's Insurance Escrow\n     **/\n    function remit() public;\n    \n    /**\n     * @dev only internal\n     * Remove all claims made from subgroups with intolerable defection rates\n     **/\n    function stripToxicSubgroups() internal;\n    \n    /**\n     * @dev only internal\n     * Pay proportionate share of Dai to all Claimants\n     **/\n    function payClaims() internal;\n    \n    /**\n     * @dev only internal\n     * Attempt to pay back refunds to remaining policyholders\n     **/\n    function payRefunds() internal;\n    \n    /**\n     * @dev internal only\n     * Remove a claim made by a policyholder\n     * Rearranges the Period's Claims to reflect change\n     * @param _index the index of the claim being removed\n     **/\n    function removeClaim(uint8 _index) internal;\n    \n    /**\n     * @dev internal only\n     * Remove a participant\n     * Rearranges activeParticipants to reflect change\n     * @param _participant the participant being removed from the Group\n     **/\n    function removeParticipant(address _participant) internal;\n    \n    /**\n     * @dev only internal\n     * @dev modifier unlocked\n     * Reset all timelocks to 0 and increment periodIndex\n     **/\n    function unlock() internal;\n\n    /**\n     * @dev view only\n     * Determine whether or not a Group is currently paying back a Loan\n     */\n    function isLoaned() public view returns (bool);\n}\n",
  "sourcePath": "/home/jack/TandaPay-Contracts/contracts/IGroup.sol",
  "ast": {
    "absolutePath": "/home/jack/TandaPay-Contracts/contracts/IGroup.sol",
    "exportedSymbols": {
      "IGroup": [
        1418
      ]
    },
    "id": 1419,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1114,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "id": 1115,
        "nodeType": "ImportDirective",
        "scope": 1419,
        "sourceUnit": 2338,
        "src": "35:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1116,
        "nodeType": "ImportDirective",
        "scope": 1419,
        "sourceUnit": 2832,
        "src": "101:64:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "file": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "id": 1117,
        "nodeType": "ImportDirective",
        "scope": 1419,
        "sourceUnit": 2138,
        "src": "166:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1118,
              "name": "Secondary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2337,
              "src": "445:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Secondary_$2337",
                "typeString": "contract Secondary"
              }
            },
            "id": 1119,
            "nodeType": "InheritanceSpecifier",
            "src": "445:9:2"
          }
        ],
        "contractDependencies": [
          2337
        ],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC.\nDate: 06.20.2019\nInterface for TandaPay Groups\nUser services: Policyholder and Secretary\nGroups are deployed for secretaries by TandaPayService*",
        "fullyImplemented": false,
        "id": 1418,
        "linearizedBaseContracts": [
          1418,
          2337
        ],
        "name": "IGroup",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1122,
            "libraryName": {
              "contractScope": null,
              "id": 1120,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2137,
              "src": "472:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$2137",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "466:36:2",
            "typeName": {
              "contractScope": null,
              "id": 1121,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "485:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "EVENTS///",
            "id": 1126,
            "name": "PolicyholderAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "553:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:23:2"
            },
            "src": "529:47:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1130,
            "name": "PolicyholderRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "607:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:23:2"
            },
            "src": "581:49:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1136,
            "name": "SubgroupChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1132,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "656:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "indexed": false,
                  "name": "_oldSubgroup",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "679:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:43:2"
            },
            "src": "635:64:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1140,
            "name": "PremiumPaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "722:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "721:23:2"
            },
            "src": "704:41:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1142,
            "name": "Locked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:2:2"
            },
            "src": "750:15:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1146,
            "name": "ClaimOpened",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "788:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:23:2"
            },
            "src": "770:41:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1150,
            "name": "ClaimRejected",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1148,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "836:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "835:23:2"
            },
            "src": "816:43:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1154,
            "name": "ClaimApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "884:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "883:23:2"
            },
            "src": "864:43:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1158,
            "name": "Defected",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "indexed": false,
                  "name": "_defector",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "927:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:19:2"
            },
            "src": "912:34:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1162,
            "name": "Overthrown",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "indexed": false,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "968:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:20:2"
            },
            "src": "951:37:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1166,
            "name": "Installed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "indexed": false,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "1009:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1008:20:2"
            },
            "src": "993:36:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1170,
            "name": "ToxicClaimStripped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1170,
                  "src": "1059:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1058:23:2"
            },
            "src": "1034:48:2"
          },
          {
            "constant": false,
            "id": 1174,
            "name": "policyholders",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1107:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 1173,
              "keyType": {
                "id": 1171,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1115:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1107:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 1172,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1126:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1178,
            "name": "subgroupCounts",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1152:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
              "typeString": "mapping(uint8 => struct Counters.Counter)"
            },
            "typeName": {
              "id": 1177,
              "keyType": {
                "id": 1175,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1160:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1152:34:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
                "typeString": "mapping(uint8 => struct Counters.Counter)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1176,
                "name": "Counters.Counter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2097,
                "src": "1169:16:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1182,
            "name": "defectionCount",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1207:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
              "typeString": "mapping(uint8 => struct Counters.Counter)"
            },
            "typeName": {
              "id": 1181,
              "keyType": {
                "id": 1179,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1215:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1207:34:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
                "typeString": "mapping(uint8 => struct Counters.Counter)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1180,
                "name": "Counters.Counter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2097,
                "src": "1224:16:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1186,
            "name": "toxicSubgroup",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1262:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
              "typeString": "mapping(uint8 => bool)"
            },
            "typeName": {
              "id": 1185,
              "keyType": {
                "id": 1183,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1270:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1262:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
                "typeString": "mapping(uint8 => bool)"
              },
              "valueType": {
                "id": 1184,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1279:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1190,
            "name": "periods",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1304:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_Period_$1242_storage_$",
              "typeString": "mapping(uint16 => struct IGroup.Period)"
            },
            "typeName": {
              "id": 1189,
              "keyType": {
                "id": 1187,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "1312:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "1304:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_Period_$1242_storage_$",
                "typeString": "mapping(uint16 => struct IGroup.Period)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1188,
                "name": "Period",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1242,
                "src": "1322:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Period_$1242_storage_ptr",
                  "typeString": "struct IGroup.Period"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1194,
            "name": "activeParticipants",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1343:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
              "typeString": "mapping(uint8 => address)"
            },
            "typeName": {
              "id": 1193,
              "keyType": {
                "id": 1191,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1351:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1343:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                "typeString": "mapping(uint8 => address)"
              },
              "valueType": {
                "id": 1192,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1360:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1198,
            "name": "participantToIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1393:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 1197,
              "keyType": {
                "id": 1195,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1401:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1393:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 1196,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1412:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1202,
            "name": "locks",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1443:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1201,
              "keyType": {
                "id": 1199,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1451:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1443:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1459:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1204,
            "name": "Dai",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1497:10:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2831",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1203,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2831,
              "src": "1497:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2831",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1206,
            "name": "groupSize",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1513:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2097_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1205,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "1513:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1208,
            "name": "periodIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1545:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2097_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1207,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "1545:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1210,
            "name": "participantIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1579:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2097_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1209,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "1579:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1212,
            "name": "secretary",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1643:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1643:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "IGroup.periodState",
            "id": 1217,
            "members": [
              {
                "id": 1213,
                "name": "LOBBY",
                "nodeType": "EnumValue",
                "src": "1715:5:2"
              },
              {
                "id": 1214,
                "name": "PRE",
                "nodeType": "EnumValue",
                "src": "1722:3:2"
              },
              {
                "id": 1215,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "1727:6:2"
              },
              {
                "id": 1216,
                "name": "POST",
                "nodeType": "EnumValue",
                "src": "1735:4:2"
              }
            ],
            "name": "periodState",
            "nodeType": "EnumDefinition",
            "src": "1697:43:2"
          },
          {
            "canonicalName": "IGroup.claimState",
            "id": 1221,
            "members": [
              {
                "id": 1218,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "1762:8:2"
              },
              {
                "id": 1219,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "1772:4:2"
              },
              {
                "id": 1220,
                "name": "ACCEPTED",
                "nodeType": "EnumValue",
                "src": "1778:8:2"
              }
            ],
            "name": "claimState",
            "nodeType": "EnumDefinition",
            "src": "1745:42:2"
          },
          {
            "constant": false,
            "id": 1223,
            "name": "premium",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1812:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1222,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1812:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1226,
            "name": "DEFECTION_THRESHOLD",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1831:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1224,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1831:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 1225,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1868:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "IGroup.Claim",
            "id": 1231,
            "members": [
              {
                "constant": false,
                "id": 1228,
                "name": "policyholder",
                "nodeType": "VariableDeclaration",
                "scope": 1231,
                "src": "1917:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1227,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1917:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1230,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 1231,
                "src": "1947:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_claimState_$1221",
                  "typeString": "enum IGroup.claimState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1229,
                  "name": "claimState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1221,
                  "src": "1947:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_claimState_$1221",
                    "typeString": "enum IGroup.claimState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nodeType": "StructDefinition",
            "scope": 1418,
            "src": "1894:76:2",
            "visibility": "public"
          },
          {
            "canonicalName": "IGroup.Period",
            "id": 1242,
            "members": [
              {
                "constant": false,
                "id": 1233,
                "name": "claimIndex",
                "nodeType": "VariableDeclaration",
                "scope": 1242,
                "src": "2004:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                  "typeString": "struct Counters.Counter"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1232,
                  "name": "Counters.Counter",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2097,
                  "src": "2004:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1237,
                "name": "claims",
                "nodeType": "VariableDeclaration",
                "scope": 1242,
                "src": "2041:30:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$1231_storage_$",
                  "typeString": "mapping(uint8 => struct IGroup.Claim)"
                },
                "typeName": {
                  "id": 1236,
                  "keyType": {
                    "id": 1234,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2041:23:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$1231_storage_$",
                    "typeString": "mapping(uint8 => struct IGroup.Claim)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 1235,
                    "name": "Claim",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1231,
                    "src": "2058:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$1231_storage_ptr",
                      "typeString": "struct IGroup.Claim"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1241,
                "name": "openedClaim",
                "nodeType": "VariableDeclaration",
                "scope": 1242,
                "src": "2081:37:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                  "typeString": "mapping(address => uint8)"
                },
                "typeName": {
                  "id": 1240,
                  "keyType": {
                    "id": 1238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2081:25:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                    "typeString": "mapping(address => uint8)"
                  },
                  "valueType": {
                    "id": 1239,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Period",
            "nodeType": "StructDefinition",
            "scope": 1418,
            "src": "1980:145:2",
            "visibility": "public"
          },
          {
            "canonicalName": "IGroup.Loan",
            "id": 1247,
            "members": [
              {
                "constant": false,
                "id": 1244,
                "name": "months",
                "nodeType": "VariableDeclaration",
                "scope": 1247,
                "src": "2153:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1243,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2153:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1246,
                "name": "deficit",
                "nodeType": "VariableDeclaration",
                "scope": 1247,
                "src": "2174:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1245,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2174:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Loan",
            "nodeType": "StructDefinition",
            "scope": 1418,
            "src": "2131:62:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1258,
              "nodeType": "Block",
              "src": "2242:102:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1250,
                          "name": "secretary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1212,
                          "src": "2260:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2846,
                            "src": "2273:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2273:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2260:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420746869732047726f757027732053656372657461727921",
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2285:40:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def0f05afa38aed9029a74541d1b74db9a0b64353169582b3d9e6a83519b2f92",
                          "typeString": "literal_string \"Address is not this Group's Secretary!\""
                        },
                        "value": "Address is not this Group's Secretary!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_def0f05afa38aed9029a74541d1b74db9a0b64353169582b3d9e6a83519b2f92",
                          "typeString": "literal_string \"Address is not this Group's Secretary!\""
                        }
                      ],
                      "id": 1249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2252:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:74:2"
                },
                {
                  "id": 1257,
                  "nodeType": "PlaceholderStatement",
                  "src": "2336:1:2"
                }
              ]
            },
            "documentation": "MODIFIERS///",
            "id": 1259,
            "name": "isSecretary",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:2:2"
            },
            "src": "2219:125:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "2380:115:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1262,
                            "name": "policyholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "2398:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 1265,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2846,
                              "src": "2412:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2412:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2398:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2427:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2398:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f74206120506f6c696379686f6c64657220696e20746869732047726f757021",
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2430:46:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a9951c2567b461ca48b096a687f9acaf162a95afc48093e1c8e83b102b635a3",
                          "typeString": "literal_string \"Address is not a Policyholder in this Group!\""
                        },
                        "value": "Address is not a Policyholder in this Group!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a9951c2567b461ca48b096a687f9acaf162a95afc48093e1c8e83b102b635a3",
                          "typeString": "literal_string \"Address is not a Policyholder in this Group!\""
                        }
                      ],
                      "id": 1261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2390:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:87:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:87:2"
                },
                {
                  "id": 1271,
                  "nodeType": "PlaceholderStatement",
                  "src": "2487:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1273,
            "name": "isPolicyholder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:2:2"
            },
            "src": "2354:141:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "2535:125:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1276,
                            "name": "participantToIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "2553:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 1279,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2846,
                              "src": "2572:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2572:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2553:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2587:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2553:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379686f6c646572206973206e6f742061637469766520696e207468652063757272656e7420506572696f6421",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2590:51:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c26baa7400012128b4065b03b765d09f9f7ab6fe8820374000bf300e96a54438",
                          "typeString": "literal_string \"Policyholder is not active in the current Period!\""
                        },
                        "value": "Policyholder is not active in the current Period!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c26baa7400012128b4065b03b765d09f9f7ab6fe8820374000bf300e96a54438",
                          "typeString": "literal_string \"Policyholder is not active in the current Period!\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2545:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:97:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:97:2"
                },
                {
                  "id": 1285,
                  "nodeType": "PlaceholderStatement",
                  "src": "2652:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1287,
            "name": "activePolicyholder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2532:2:2"
            },
            "src": "2505:155:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1316,
              "nodeType": "Block",
              "src": "2713:191:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1292,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2731:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1294,
                                "name": "_state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1289,
                                "src": "2742:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              ],
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2737:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint"
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2737:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2731:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1297,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2753:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2731:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206c61746520696e20706572696f6420666f72207468697320416374696f6e21",
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2759:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7aded366938d18c30abd571a06f7e30f82b39a1998f17b289570afecf22e497f",
                          "typeString": "literal_string \"Too late in period for this Action!\""
                        },
                        "value": "Too late in period for this Action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7aded366938d18c30abd571a06f7e30f82b39a1998f17b289570afecf22e497f",
                          "typeString": "literal_string \"Too late in period for this Action!\""
                        }
                      ],
                      "id": 1291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2723:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1303,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2815:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1305,
                                  "name": "_state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1289,
                                  "src": "2826:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_periodState_$1217",
                                    "typeString": "enum IGroup.periodState"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_periodState_$1217",
                                    "typeString": "enum IGroup.periodState"
                                  }
                                ],
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2821:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2821:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2836:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2821:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2815:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1310,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2842:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2815:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206561726c7920696e20706572696f6420666f72207468697320416374696f6e21",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2847:38:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7670cdbb47d021084a99a2130df560d3a6d07da3cc3144de810bc5862478c002",
                          "typeString": "literal_string \"Too early in period for this Action!\""
                        },
                        "value": "Too early in period for this Action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7670cdbb47d021084a99a2130df560d3a6d07da3cc3144de810bc5862478c002",
                          "typeString": "literal_string \"Too early in period for this Action!\""
                        }
                      ],
                      "id": 1302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2807:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2807:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:79:2"
                },
                {
                  "id": 1315,
                  "nodeType": "PlaceholderStatement",
                  "src": "2896:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1317,
            "name": "correctPeriod",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "name": "_state",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "2693:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_periodState_$1217",
                    "typeString": "enum IGroup.periodState"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1288,
                    "name": "periodState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1217,
                    "src": "2693:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_periodState_$1217",
                      "typeString": "enum IGroup.periodState"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2692:20:2"
            },
            "src": "2670:234:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "2934:159:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1320,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2952:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1325,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1322,
                                  "name": "periodState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1217,
                                  "src": "2964:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_periodState_$1217_$",
                                    "typeString": "type(enum IGroup.periodState)"
                                  }
                                },
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "POST",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2964:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              ],
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2958:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": "uint8"
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2958:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2952:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1326,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2986:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2952:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f7420706572666f726d2072656d697474616e6365207768696c6520496e737572616e636520657363726f77206973207374696c6c2074696d656c6f636b656421",
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3003:71:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e175175c8da4630d5b4bebf4c8d214180bc534bec0d86241ef99275e240ec7e",
                          "typeString": "literal_string \"Cannot perform remittance while Insurance escrow is still timelocked!\""
                        },
                        "value": "Cannot perform remittance while Insurance escrow is still timelocked!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e175175c8da4630d5b4bebf4c8d214180bc534bec0d86241ef99275e240ec7e",
                          "typeString": "literal_string \"Cannot perform remittance while Insurance escrow is still timelocked!\""
                        }
                      ],
                      "id": 1319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2944:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:131:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:131:2"
                },
                {
                  "id": 1331,
                  "nodeType": "PlaceholderStatement",
                  "src": "3085:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1333,
            "name": "unlocked",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:2:2"
            },
            "src": "2914:179:2",
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.LOBBY)\nAdd a Policyholder to the group\n@param _to the address of the Policyholder being added\n@param _subgroup the subgroup they are to be added to*",
            "id": 1340,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPolicyholder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1335,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "3410:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1337,
                  "name": "_subgroup",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "3423:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3423:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3409:30:2"
            },
            "returnParameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3446:0:2"
            },
            "scope": 1418,
            "src": "3385:62:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.PRE)\nRemove a Policyholder from the group\n@param _from the address of the Policyholder being removed*",
            "id": 1345,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePolicyholder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "3697:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3696:15:2"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3718:0:2"
            },
            "scope": 1418,
            "src": "3669:50:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.PRE)\nChange the subgroup of a given policyholder\n@param _policyholder the address of the policyholder switching groups\n@param _subgroup the subgroup being switched to*",
            "id": 1352,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "changeSubgroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4038:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1349,
                  "name": "_subgroup",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4061:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4061:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4037:40:2"
            },
            "returnParameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4084:0:2"
            },
            "scope": 1418,
            "src": "4014:71:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev ensure groupSize >= 50, group is not in escrow\nLock all funds in the Insurance smart contract",
            "id": 1355,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4266:2:2"
            },
            "returnParameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4275:0:2"
            },
            "scope": 1418,
            "src": "4253:23:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isPolicyholder\n@dev modifier correctPeriod(periodState.PRE)\nPolicyholder pays their Dai Premium to the Group contract for escrow *",
            "id": 1358,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payPremium",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4483:2:2"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4492:0:2"
            },
            "scope": 1418,
            "src": "4464:29:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier activePolicyholder\n@dev modifier correctPeriod(periodState.ACTIVE)\nPolicyholder opens a new claim*",
            "id": 1361,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "openClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4671:2:2"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4680:0:2"
            },
            "scope": 1418,
            "src": "4653:28:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary \n@dev modifier correctPeriod(periodState.POST)\nSecretary rejects a claim\n@param _claimant the address of the Policyholder who opened the claim*",
            "id": 1366,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rejectClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 1366,
                  "src": "4926:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4925:19:2"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4951:0:2"
            },
            "scope": 1418,
            "src": "4905:47:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.POST)\nSecretary approves a Policyholder's Claim\n@param _claimant the address of the Policyholder who opened the claim*",
            "id": 1371,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "5213:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5212:19:2"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5238:0:2"
            },
            "scope": 1418,
            "src": "5191:48:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier activePolicyholder\n@dev modifier correctPeriod(periodState.POST)\nPolicyholder defects from the Tanda Group*",
            "id": 1374,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defect",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5423:2:2"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5432:0:2"
            },
            "scope": 1418,
            "src": "5408:25:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\nGive secretary rights to the TandaPayService contract*",
            "id": 1377,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "overthrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5572:2:2"
            },
            "returnParameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5581:0:2"
            },
            "scope": 1418,
            "src": "5554:28:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\n@dev can only be called if Secretary is TandaPayService\nChange the secretary of this group\n@param _secretary the address being authorized as Secretary in this Group contract*",
            "id": 1382,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "install",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1379,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "5854:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5854:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5853:20:2"
            },
            "returnParameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5880:0:2"
            },
            "scope": 1418,
            "src": "5837:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\nDetermine whether a group is ready to be remitted from escrow\n@return true if the group is ready to remit, and false otherwise*",
            "id": 1387,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remittable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6101:2:2"
            },
            "returnParameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1385,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "6125:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6125:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6124:6:2"
            },
            "scope": 1418,
            "src": "6082:49:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\n@dev modifier unlocked\nRemit this group's Insurance Escrow*",
            "id": 1390,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:2:2"
            },
            "returnParameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6287:0:2"
            },
            "scope": 1418,
            "src": "6264:24:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev only internal\nRemove all claims made from subgroups with intolerable defection rates*",
            "id": 1393,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stripToxicSubgroups",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6447:2:2"
            },
            "returnParameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6458:0:2"
            },
            "scope": 1418,
            "src": "6419:40:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev only internal\nPay proportionate share of Dai to all Claimants*",
            "id": 1396,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payClaims",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6585:2:2"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6596:0:2"
            },
            "scope": 1418,
            "src": "6567:30:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev only internal\nAttempt to pay back refunds to remaining policyholders*",
            "id": 1399,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payRefunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6731:2:2"
            },
            "returnParameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:0:2"
            },
            "scope": 1418,
            "src": "6712:31:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev internal only\nRemove a claim made by a policyholder\nRearranges the Period's Claims to reflect change\n@param _index the index of the claim being removed*",
            "id": 1404,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "6976:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6976:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6975:14:2"
            },
            "returnParameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6998:0:2"
            },
            "scope": 1418,
            "src": "6955:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev internal only\nRemove a participant\nRearranges activeParticipants to reflect change\n@param _participant the participant being removed from the Group*",
            "id": 1409,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeParticipant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1406,
                  "name": "_participant",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "7234:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7234:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7233:22:2"
            },
            "returnParameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7264:0:2"
            },
            "scope": 1418,
            "src": "7207:58:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev only internal\n@dev modifier unlocked\nReset all timelocks to 0 and increment periodIndex*",
            "id": 1412,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7421:2:2"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7432:0:2"
            },
            "scope": 1418,
            "src": "7406:27:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev view only\nDetermine whether or not a Group is currently paying back a Loan",
            "id": 1417,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isLoaned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7566:2:2"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1417,
                  "src": "7590:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7589:6:2"
            },
            "scope": 1418,
            "src": "7549:47:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1419,
        "src": "426:7172:2"
      }
    ],
    "src": "0:7599:2"
  },
  "legacyAST": {
    "absolutePath": "/home/jack/TandaPay-Contracts/contracts/IGroup.sol",
    "exportedSymbols": {
      "IGroup": [
        1418
      ]
    },
    "id": 1419,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1114,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Secondary.sol",
        "id": 1115,
        "nodeType": "ImportDirective",
        "scope": 1419,
        "sourceUnit": 2338,
        "src": "35:65:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 1116,
        "nodeType": "ImportDirective",
        "scope": 1419,
        "sourceUnit": 2832,
        "src": "101:64:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "file": "openzeppelin-solidity/contracts/drafts/Counters.sol",
        "id": 1117,
        "nodeType": "ImportDirective",
        "scope": 1419,
        "sourceUnit": 2138,
        "src": "166:61:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1118,
              "name": "Secondary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2337,
              "src": "445:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Secondary_$2337",
                "typeString": "contract Secondary"
              }
            },
            "id": 1119,
            "nodeType": "InheritanceSpecifier",
            "src": "445:9:2"
          }
        ],
        "contractDependencies": [
          2337
        ],
        "contractKind": "contract",
        "documentation": "@author blOX Consulting LLC.\nDate: 06.20.2019\nInterface for TandaPay Groups\nUser services: Policyholder and Secretary\nGroups are deployed for secretaries by TandaPayService*",
        "fullyImplemented": false,
        "id": 1418,
        "linearizedBaseContracts": [
          1418,
          2337
        ],
        "name": "IGroup",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1122,
            "libraryName": {
              "contractScope": null,
              "id": 1120,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2137,
              "src": "472:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$2137",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "466:36:2",
            "typeName": {
              "contractScope": null,
              "id": 1121,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "485:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": "EVENTS///",
            "id": 1126,
            "name": "PolicyholderAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1126,
                  "src": "553:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:23:2"
            },
            "src": "529:47:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1130,
            "name": "PolicyholderRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1128,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "607:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "606:23:2"
            },
            "src": "581:49:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1136,
            "name": "SubgroupChange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1132,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "656:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "indexed": false,
                  "name": "_oldSubgroup",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "679:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "655:43:2"
            },
            "src": "635:64:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1140,
            "name": "PremiumPaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "722:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "721:23:2"
            },
            "src": "704:41:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1142,
            "name": "Locked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:2:2"
            },
            "src": "750:15:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1146,
            "name": "ClaimOpened",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1146,
                  "src": "788:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:23:2"
            },
            "src": "770:41:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1150,
            "name": "ClaimRejected",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1148,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "836:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "835:23:2"
            },
            "src": "816:43:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1154,
            "name": "ClaimApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "884:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "883:23:2"
            },
            "src": "864:43:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1158,
            "name": "Defected",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "indexed": false,
                  "name": "_defector",
                  "nodeType": "VariableDeclaration",
                  "scope": 1158,
                  "src": "927:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "927:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:19:2"
            },
            "src": "912:34:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1162,
            "name": "Overthrown",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1160,
                  "indexed": false,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1162,
                  "src": "968:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "967:20:2"
            },
            "src": "951:37:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1166,
            "name": "Installed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1164,
                  "indexed": false,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "1009:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1008:20:2"
            },
            "src": "993:36:2"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1170,
            "name": "ToxicClaimStripped",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1168,
                  "indexed": false,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1170,
                  "src": "1059:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1058:23:2"
            },
            "src": "1034:48:2"
          },
          {
            "constant": false,
            "id": 1174,
            "name": "policyholders",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1107:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 1173,
              "keyType": {
                "id": 1171,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1115:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1107:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 1172,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1126:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1178,
            "name": "subgroupCounts",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1152:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
              "typeString": "mapping(uint8 => struct Counters.Counter)"
            },
            "typeName": {
              "id": 1177,
              "keyType": {
                "id": 1175,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1160:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1152:34:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
                "typeString": "mapping(uint8 => struct Counters.Counter)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1176,
                "name": "Counters.Counter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2097,
                "src": "1169:16:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1182,
            "name": "defectionCount",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1207:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
              "typeString": "mapping(uint8 => struct Counters.Counter)"
            },
            "typeName": {
              "id": 1181,
              "keyType": {
                "id": 1179,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1215:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1207:34:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Counter_$2097_storage_$",
                "typeString": "mapping(uint8 => struct Counters.Counter)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1180,
                "name": "Counters.Counter",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2097,
                "src": "1224:16:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1186,
            "name": "toxicSubgroup",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1262:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
              "typeString": "mapping(uint8 => bool)"
            },
            "typeName": {
              "id": 1185,
              "keyType": {
                "id": 1183,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1270:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1262:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_bool_$",
                "typeString": "mapping(uint8 => bool)"
              },
              "valueType": {
                "id": 1184,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1279:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1190,
            "name": "periods",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1304:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_Period_$1242_storage_$",
              "typeString": "mapping(uint16 => struct IGroup.Period)"
            },
            "typeName": {
              "id": 1189,
              "keyType": {
                "id": 1187,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "1312:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "1304:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_struct$_Period_$1242_storage_$",
                "typeString": "mapping(uint16 => struct IGroup.Period)"
              },
              "valueType": {
                "contractScope": null,
                "id": 1188,
                "name": "Period",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1242,
                "src": "1322:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Period_$1242_storage_ptr",
                  "typeString": "struct IGroup.Period"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1194,
            "name": "activeParticipants",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1343:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
              "typeString": "mapping(uint8 => address)"
            },
            "typeName": {
              "id": 1193,
              "keyType": {
                "id": 1191,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1351:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              },
              "nodeType": "Mapping",
              "src": "1343:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint8_$_t_address_$",
                "typeString": "mapping(uint8 => address)"
              },
              "valueType": {
                "id": 1192,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1360:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1198,
            "name": "participantToIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1393:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 1197,
              "keyType": {
                "id": 1195,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1401:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1393:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 1196,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "1412:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1202,
            "name": "locks",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1443:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1201,
              "keyType": {
                "id": 1199,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1451:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1443:21:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1459:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1204,
            "name": "Dai",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1497:10:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2831",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1203,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2831,
              "src": "1497:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2831",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1206,
            "name": "groupSize",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1513:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2097_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1205,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "1513:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1208,
            "name": "periodIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1545:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2097_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1207,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "1545:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1210,
            "name": "participantIndex",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1579:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2097_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 1209,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2097,
              "src": "1579:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1212,
            "name": "secretary",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1643:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1211,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1643:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "IGroup.periodState",
            "id": 1217,
            "members": [
              {
                "id": 1213,
                "name": "LOBBY",
                "nodeType": "EnumValue",
                "src": "1715:5:2"
              },
              {
                "id": 1214,
                "name": "PRE",
                "nodeType": "EnumValue",
                "src": "1722:3:2"
              },
              {
                "id": 1215,
                "name": "ACTIVE",
                "nodeType": "EnumValue",
                "src": "1727:6:2"
              },
              {
                "id": 1216,
                "name": "POST",
                "nodeType": "EnumValue",
                "src": "1735:4:2"
              }
            ],
            "name": "periodState",
            "nodeType": "EnumDefinition",
            "src": "1697:43:2"
          },
          {
            "canonicalName": "IGroup.claimState",
            "id": 1221,
            "members": [
              {
                "id": 1218,
                "name": "REJECTED",
                "nodeType": "EnumValue",
                "src": "1762:8:2"
              },
              {
                "id": 1219,
                "name": "OPEN",
                "nodeType": "EnumValue",
                "src": "1772:4:2"
              },
              {
                "id": 1220,
                "name": "ACCEPTED",
                "nodeType": "EnumValue",
                "src": "1778:8:2"
              }
            ],
            "name": "claimState",
            "nodeType": "EnumDefinition",
            "src": "1745:42:2"
          },
          {
            "constant": false,
            "id": 1223,
            "name": "premium",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1812:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1222,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1812:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1226,
            "name": "DEFECTION_THRESHOLD",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "1831:38:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 1224,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1831:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 1225,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1868:1:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "IGroup.Claim",
            "id": 1231,
            "members": [
              {
                "constant": false,
                "id": 1228,
                "name": "policyholder",
                "nodeType": "VariableDeclaration",
                "scope": 1231,
                "src": "1917:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1227,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1917:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1230,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 1231,
                "src": "1947:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_claimState_$1221",
                  "typeString": "enum IGroup.claimState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1229,
                  "name": "claimState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1221,
                  "src": "1947:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_claimState_$1221",
                    "typeString": "enum IGroup.claimState"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Claim",
            "nodeType": "StructDefinition",
            "scope": 1418,
            "src": "1894:76:2",
            "visibility": "public"
          },
          {
            "canonicalName": "IGroup.Period",
            "id": 1242,
            "members": [
              {
                "constant": false,
                "id": 1233,
                "name": "claimIndex",
                "nodeType": "VariableDeclaration",
                "scope": 1242,
                "src": "2004:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                  "typeString": "struct Counters.Counter"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1232,
                  "name": "Counters.Counter",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 2097,
                  "src": "2004:16:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$2097_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1237,
                "name": "claims",
                "nodeType": "VariableDeclaration",
                "scope": 1242,
                "src": "2041:30:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$1231_storage_$",
                  "typeString": "mapping(uint8 => struct IGroup.Claim)"
                },
                "typeName": {
                  "id": 1236,
                  "keyType": {
                    "id": 1234,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2049:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2041:23:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint8_$_t_struct$_Claim_$1231_storage_$",
                    "typeString": "mapping(uint8 => struct IGroup.Claim)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 1235,
                    "name": "Claim",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1231,
                    "src": "2058:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Claim_$1231_storage_ptr",
                      "typeString": "struct IGroup.Claim"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1241,
                "name": "openedClaim",
                "nodeType": "VariableDeclaration",
                "scope": 1242,
                "src": "2081:37:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                  "typeString": "mapping(address => uint8)"
                },
                "typeName": {
                  "id": 1240,
                  "keyType": {
                    "id": 1238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2081:25:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                    "typeString": "mapping(address => uint8)"
                  },
                  "valueType": {
                    "id": 1239,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2100:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Period",
            "nodeType": "StructDefinition",
            "scope": 1418,
            "src": "1980:145:2",
            "visibility": "public"
          },
          {
            "canonicalName": "IGroup.Loan",
            "id": 1247,
            "members": [
              {
                "constant": false,
                "id": 1244,
                "name": "months",
                "nodeType": "VariableDeclaration",
                "scope": 1247,
                "src": "2153:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1243,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2153:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1246,
                "name": "deficit",
                "nodeType": "VariableDeclaration",
                "scope": 1247,
                "src": "2174:12:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1245,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2174:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Loan",
            "nodeType": "StructDefinition",
            "scope": 1418,
            "src": "2131:62:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1258,
              "nodeType": "Block",
              "src": "2242:102:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1250,
                          "name": "secretary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1212,
                          "src": "2260:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2846,
                            "src": "2273:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2273:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2260:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420746869732047726f757027732053656372657461727921",
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2285:40:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_def0f05afa38aed9029a74541d1b74db9a0b64353169582b3d9e6a83519b2f92",
                          "typeString": "literal_string \"Address is not this Group's Secretary!\""
                        },
                        "value": "Address is not this Group's Secretary!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_def0f05afa38aed9029a74541d1b74db9a0b64353169582b3d9e6a83519b2f92",
                          "typeString": "literal_string \"Address is not this Group's Secretary!\""
                        }
                      ],
                      "id": 1249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2252:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:74:2"
                },
                {
                  "id": 1257,
                  "nodeType": "PlaceholderStatement",
                  "src": "2336:1:2"
                }
              ]
            },
            "documentation": "MODIFIERS///",
            "id": 1259,
            "name": "isSecretary",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:2:2"
            },
            "src": "2219:125:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "2380:115:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1262,
                            "name": "policyholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "2398:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 1265,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2846,
                              "src": "2412:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2412:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2398:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2427:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2398:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f74206120506f6c696379686f6c64657220696e20746869732047726f757021",
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2430:46:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a9951c2567b461ca48b096a687f9acaf162a95afc48093e1c8e83b102b635a3",
                          "typeString": "literal_string \"Address is not a Policyholder in this Group!\""
                        },
                        "value": "Address is not a Policyholder in this Group!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a9951c2567b461ca48b096a687f9acaf162a95afc48093e1c8e83b102b635a3",
                          "typeString": "literal_string \"Address is not a Policyholder in this Group!\""
                        }
                      ],
                      "id": 1261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2390:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2390:87:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1270,
                  "nodeType": "ExpressionStatement",
                  "src": "2390:87:2"
                },
                {
                  "id": 1271,
                  "nodeType": "PlaceholderStatement",
                  "src": "2487:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1273,
            "name": "isPolicyholder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:2:2"
            },
            "src": "2354:141:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "2535:125:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1276,
                            "name": "participantToIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1198,
                            "src": "2553:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 1279,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2846,
                              "src": "2572:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2572:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2553:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2587:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2553:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506f6c696379686f6c646572206973206e6f742061637469766520696e207468652063757272656e7420506572696f6421",
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2590:51:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c26baa7400012128b4065b03b765d09f9f7ab6fe8820374000bf300e96a54438",
                          "typeString": "literal_string \"Policyholder is not active in the current Period!\""
                        },
                        "value": "Policyholder is not active in the current Period!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c26baa7400012128b4065b03b765d09f9f7ab6fe8820374000bf300e96a54438",
                          "typeString": "literal_string \"Policyholder is not active in the current Period!\""
                        }
                      ],
                      "id": 1275,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2545:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:97:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1284,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:97:2"
                },
                {
                  "id": 1285,
                  "nodeType": "PlaceholderStatement",
                  "src": "2652:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1287,
            "name": "activePolicyholder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2532:2:2"
            },
            "src": "2505:155:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1316,
              "nodeType": "Block",
              "src": "2713:191:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1292,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2731:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1294,
                                "name": "_state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1289,
                                "src": "2742:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              ],
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2737:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint"
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2737:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2731:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1297,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2753:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2731:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206c61746520696e20706572696f6420666f72207468697320416374696f6e21",
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2759:37:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7aded366938d18c30abd571a06f7e30f82b39a1998f17b289570afecf22e497f",
                          "typeString": "literal_string \"Too late in period for this Action!\""
                        },
                        "value": "Too late in period for this Action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7aded366938d18c30abd571a06f7e30f82b39a1998f17b289570afecf22e497f",
                          "typeString": "literal_string \"Too late in period for this Action!\""
                        }
                      ],
                      "id": 1291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2723:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1303,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2815:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1309,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1305,
                                  "name": "_state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1289,
                                  "src": "2826:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_periodState_$1217",
                                    "typeString": "enum IGroup.periodState"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_periodState_$1217",
                                    "typeString": "enum IGroup.periodState"
                                  }
                                ],
                                "id": 1304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2821:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 1306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2821:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2836:1:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "2821:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2815:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1310,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2842:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2815:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6f206561726c7920696e20706572696f6420666f72207468697320416374696f6e21",
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2847:38:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7670cdbb47d021084a99a2130df560d3a6d07da3cc3144de810bc5862478c002",
                          "typeString": "literal_string \"Too early in period for this Action!\""
                        },
                        "value": "Too early in period for this Action!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7670cdbb47d021084a99a2130df560d3a6d07da3cc3144de810bc5862478c002",
                          "typeString": "literal_string \"Too early in period for this Action!\""
                        }
                      ],
                      "id": 1302,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2807:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2807:79:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1314,
                  "nodeType": "ExpressionStatement",
                  "src": "2807:79:2"
                },
                {
                  "id": 1315,
                  "nodeType": "PlaceholderStatement",
                  "src": "2896:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1317,
            "name": "correctPeriod",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "name": "_state",
                  "nodeType": "VariableDeclaration",
                  "scope": 1317,
                  "src": "2693:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_periodState_$1217",
                    "typeString": "enum IGroup.periodState"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1288,
                    "name": "periodState",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1217,
                    "src": "2693:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_periodState_$1217",
                      "typeString": "enum IGroup.periodState"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2692:20:2"
            },
            "src": "2670:234:2",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1332,
              "nodeType": "Block",
              "src": "2934:159:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1320,
                            "name": "locks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1202,
                            "src": "2952:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1325,
                          "indexExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1322,
                                  "name": "periodState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1217,
                                  "src": "2964:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_periodState_$1217_$",
                                    "typeString": "type(enum IGroup.periodState)"
                                  }
                                },
                                "id": 1323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "POST",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2964:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_periodState_$1217",
                                  "typeString": "enum IGroup.periodState"
                                }
                              ],
                              "id": 1321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2958:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": "uint8"
                            },
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2958:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2952:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1326,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2848,
                          "src": "2986:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2952:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f7420706572666f726d2072656d697474616e6365207768696c6520496e737572616e636520657363726f77206973207374696c6c2074696d656c6f636b656421",
                        "id": 1328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3003:71:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e175175c8da4630d5b4bebf4c8d214180bc534bec0d86241ef99275e240ec7e",
                          "typeString": "literal_string \"Cannot perform remittance while Insurance escrow is still timelocked!\""
                        },
                        "value": "Cannot perform remittance while Insurance escrow is still timelocked!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e175175c8da4630d5b4bebf4c8d214180bc534bec0d86241ef99275e240ec7e",
                          "typeString": "literal_string \"Cannot perform remittance while Insurance escrow is still timelocked!\""
                        }
                      ],
                      "id": 1319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2849,
                        2850
                      ],
                      "referencedDeclaration": 2850,
                      "src": "2944:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:131:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "2944:131:2"
                },
                {
                  "id": 1331,
                  "nodeType": "PlaceholderStatement",
                  "src": "3085:1:2"
                }
              ]
            },
            "documentation": null,
            "id": 1333,
            "name": "unlocked",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:2:2"
            },
            "src": "2914:179:2",
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.LOBBY)\nAdd a Policyholder to the group\n@param _to the address of the Policyholder being added\n@param _subgroup the subgroup they are to be added to*",
            "id": 1340,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addPolicyholder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1335,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "3410:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1337,
                  "name": "_subgroup",
                  "nodeType": "VariableDeclaration",
                  "scope": 1340,
                  "src": "3423:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1336,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3423:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3409:30:2"
            },
            "returnParameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3446:0:2"
            },
            "scope": 1418,
            "src": "3385:62:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.PRE)\nRemove a Policyholder from the group\n@param _from the address of the Policyholder being removed*",
            "id": 1345,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removePolicyholder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1342,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "3697:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3696:15:2"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3718:0:2"
            },
            "scope": 1418,
            "src": "3669:50:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.PRE)\nChange the subgroup of a given policyholder\n@param _policyholder the address of the policyholder switching groups\n@param _subgroup the subgroup being switched to*",
            "id": 1352,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "changeSubgroup",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "name": "_policyholder",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4038:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4038:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1349,
                  "name": "_subgroup",
                  "nodeType": "VariableDeclaration",
                  "scope": 1352,
                  "src": "4061:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4061:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4037:40:2"
            },
            "returnParameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4084:0:2"
            },
            "scope": 1418,
            "src": "4014:71:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev ensure groupSize >= 50, group is not in escrow\nLock all funds in the Insurance smart contract",
            "id": 1355,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4266:2:2"
            },
            "returnParameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4275:0:2"
            },
            "scope": 1418,
            "src": "4253:23:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isPolicyholder\n@dev modifier correctPeriod(periodState.PRE)\nPolicyholder pays their Dai Premium to the Group contract for escrow *",
            "id": 1358,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payPremium",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4483:2:2"
            },
            "returnParameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4492:0:2"
            },
            "scope": 1418,
            "src": "4464:29:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier activePolicyholder\n@dev modifier correctPeriod(periodState.ACTIVE)\nPolicyholder opens a new claim*",
            "id": 1361,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "openClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4671:2:2"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4680:0:2"
            },
            "scope": 1418,
            "src": "4653:28:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary \n@dev modifier correctPeriod(periodState.POST)\nSecretary rejects a claim\n@param _claimant the address of the Policyholder who opened the claim*",
            "id": 1366,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rejectClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1363,
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 1366,
                  "src": "4926:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4925:19:2"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4951:0:2"
            },
            "scope": 1418,
            "src": "4905:47:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier isSecretary\n@dev modifier correctPeriod(periodState.POST)\nSecretary approves a Policyholder's Claim\n@param _claimant the address of the Policyholder who opened the claim*",
            "id": 1371,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approveClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1368,
                  "name": "_claimant",
                  "nodeType": "VariableDeclaration",
                  "scope": 1371,
                  "src": "5213:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5213:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5212:19:2"
            },
            "returnParameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5238:0:2"
            },
            "scope": 1418,
            "src": "5191:48:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier activePolicyholder\n@dev modifier correctPeriod(periodState.POST)\nPolicyholder defects from the Tanda Group*",
            "id": 1374,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defect",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5423:2:2"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5432:0:2"
            },
            "scope": 1418,
            "src": "5408:25:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\nGive secretary rights to the TandaPayService contract*",
            "id": 1377,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "overthrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5572:2:2"
            },
            "returnParameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5581:0:2"
            },
            "scope": 1418,
            "src": "5554:28:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\n@dev can only be called if Secretary is TandaPayService\nChange the secretary of this group\n@param _secretary the address being authorized as Secretary in this Group contract*",
            "id": 1382,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "install",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1379,
                  "name": "_secretary",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "5854:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5854:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5853:20:2"
            },
            "returnParameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5880:0:2"
            },
            "scope": 1418,
            "src": "5837:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\nDetermine whether a group is ready to be remitted from escrow\n@return true if the group is ready to remit, and false otherwise*",
            "id": 1387,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remittable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6101:2:2"
            },
            "returnParameters": {
              "id": 1386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1385,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "6125:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1384,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6125:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6124:6:2"
            },
            "scope": 1418,
            "src": "6082:49:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev modifier onlyPrimary\n@dev modifier unlocked\nRemit this group's Insurance Escrow*",
            "id": 1390,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:2:2"
            },
            "returnParameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6287:0:2"
            },
            "scope": 1418,
            "src": "6264:24:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev only internal\nRemove all claims made from subgroups with intolerable defection rates*",
            "id": 1393,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stripToxicSubgroups",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6447:2:2"
            },
            "returnParameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6458:0:2"
            },
            "scope": 1418,
            "src": "6419:40:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev only internal\nPay proportionate share of Dai to all Claimants*",
            "id": 1396,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payClaims",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6585:2:2"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6596:0:2"
            },
            "scope": 1418,
            "src": "6567:30:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev only internal\nAttempt to pay back refunds to remaining policyholders*",
            "id": 1399,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "payRefunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6731:2:2"
            },
            "returnParameters": {
              "id": 1398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:0:2"
            },
            "scope": 1418,
            "src": "6712:31:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev internal only\nRemove a claim made by a policyholder\nRearranges the Period's Claims to reflect change\n@param _index the index of the claim being removed*",
            "id": 1404,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeClaim",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1401,
                  "name": "_index",
                  "nodeType": "VariableDeclaration",
                  "scope": 1404,
                  "src": "6976:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1400,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6976:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6975:14:2"
            },
            "returnParameters": {
              "id": 1403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6998:0:2"
            },
            "scope": 1418,
            "src": "6955:44:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev internal only\nRemove a participant\nRearranges activeParticipants to reflect change\n@param _participant the participant being removed from the Group*",
            "id": 1409,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeParticipant",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1406,
                  "name": "_participant",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "7234:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7234:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7233:22:2"
            },
            "returnParameters": {
              "id": 1408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7264:0:2"
            },
            "scope": 1418,
            "src": "7207:58:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev only internal\n@dev modifier unlocked\nReset all timelocks to 0 and increment periodIndex*",
            "id": 1412,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unlock",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7421:2:2"
            },
            "returnParameters": {
              "id": 1411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7432:0:2"
            },
            "scope": 1418,
            "src": "7406:27:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": null,
            "documentation": "@dev view only\nDetermine whether or not a Group is currently paying back a Loan",
            "id": 1417,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isLoaned",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7566:2:2"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1415,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1417,
                  "src": "7590:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1414,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7590:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7589:6:2"
            },
            "scope": 1418,
            "src": "7549:47:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1419,
        "src": "426:7172:2"
      }
    ],
    "src": "0:7599:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-21T18:18:26.788Z",
  "devdoc": {
    "author": "blOX Consulting LLC. Date: 06.20.2019 Interface for TandaPay Groups User services: Policyholder and Secretary Groups are deployed for secretaries by TandaPayService*",
    "methods": {
      "addPolicyholder(address,uint8)": {
        "details": "modifier isSecretarymodifier correctPeriod(periodState.LOBBY) Add a Policyholder to the group",
        "params": {
          "_subgroup": "the subgroup they are to be added to*",
          "_to": "the address of the Policyholder being added"
        }
      },
      "approveClaim(address)": {
        "details": "modifier isSecretarymodifier correctPeriod(periodState.POST) Secretary approves a Policyholder's Claim",
        "params": {
          "_claimant": "the address of the Policyholder who opened the claim*"
        }
      },
      "changeSubgroup(address,uint8)": {
        "details": "modifier isSecretarymodifier correctPeriod(periodState.PRE) Change the subgroup of a given policyholder",
        "params": {
          "_policyholder": "the address of the policyholder switching groups",
          "_subgroup": "the subgroup being switched to*"
        }
      },
      "defect()": {
        "details": "modifier activePolicyholdermodifier correctPeriod(periodState.POST) Policyholder defects from the Tanda Group*"
      },
      "install(address)": {
        "details": "modifier onlyPrimarycan only be called if Secretary is TandaPayService Change the secretary of this group",
        "params": {
          "_secretary": "the address being authorized as Secretary in this Group contract*"
        }
      },
      "isLoaned()": {
        "details": "view only Determine whether or not a Group is currently paying back a Loan"
      },
      "lock()": {
        "details": "modifier isSecretaryensure groupSize >= 50, group is not in escrow Lock all funds in the Insurance smart contract"
      },
      "openClaim()": {
        "details": "modifier activePolicyholdermodifier correctPeriod(periodState.ACTIVE) Policyholder opens a new claim*"
      },
      "overthrow()": {
        "details": "modifier onlyPrimary Give secretary rights to the TandaPayService contract*"
      },
      "payPremium()": {
        "details": "modifier isPolicyholdermodifier correctPeriod(periodState.PRE) Policyholder pays their Dai Premium to the Group contract for escrow *"
      },
      "primary()": {
        "return": "the address of the primary."
      },
      "rejectClaim(address)": {
        "details": "modifier isSecretary modifier correctPeriod(periodState.POST) Secretary rejects a claim",
        "params": {
          "_claimant": "the address of the Policyholder who opened the claim*"
        }
      },
      "remit()": {
        "details": "modifier onlyPrimarymodifier unlocked Remit this group's Insurance Escrow*"
      },
      "remittable()": {
        "details": "modifier onlyPrimary Determine whether a group is ready to be remitted from escrow",
        "return": "true if the group is ready to remit, and false otherwise*"
      },
      "removePolicyholder(address)": {
        "details": "modifier isSecretarymodifier correctPeriod(periodState.PRE) Remove a Policyholder from the group",
        "params": {
          "_from": "the address of the Policyholder being removed*"
        }
      },
      "transferPrimary(address)": {
        "details": "Transfers contract to a new primary.",
        "params": {
          "recipient": "The address of new primary."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}